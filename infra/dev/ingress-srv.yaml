apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server:  https://acme-v02.api.letsencrypt.org/directory
    email: development@ebazaar.mn
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: k8sapi-dev-cert
  namespace: default
spec:
  secretName: k8sapi-dev-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: k8sapi-dev.ebazaar.mn
  dnsNames:
  - k8sapi-dev.ebazaar.mn

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true" 
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - k8sapi-dev.ebazaar.mn
      secretName: k8sapi-dev-cert
  rules:
    - host: k8sapi-dev.ebazaar.mn
      http:
        paths:
          - path: /api/v1/users/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: auth-srv
                port:
                  number: 3000
          # - path: /api/v1/customer/?(.*)
          #   pathType: ImplementationSpecific
          #   backend:
          #     service:
          #       name: customer-srv
          #       port:
          #         number: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  externalIPs:
    - 114.129.42.59
  ports:
    - name: http  # Add a name for the HTTP port
      port: 80
      targetPort: 80
    - name: https  # Add a name for the HTTPS port
      port: 443
      targetPort: 443
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx