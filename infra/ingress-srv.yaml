apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-dev
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: development@ebazaar.mn
    privateKeySecretRef:
      name: letsencrypt-dev
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-secret
spec:
  secretName: tls-secret  # Desired secret name
  issuerRef:
    name: letsencrypt-dev
    kind: ClusterIssuer
  commonName: k8sapi-dev.ebazaar.mn
  dnsNames:
    - k8sapi-dev.ebazaar.mn

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-dev"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true" 
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - k8sapi-dev.ebazaar.mn
      secretName: tls-secret  # Referencing the Certificate secret name
  rules:
    - host: k8sapi-dev.ebazaar.mn
      http:
        paths:
          - path: /.well-known/acme-challenge/*
              pathType: Prefix
              backend:
                service:
                  name: cm-acme-http-solver-kg85n  # Make sure this is the correct service
                  port:
                    number: 80
          - path: /api/v1/users/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: auth-srv
                port:
                  number: 3000
          - path: /api/v1/customer/?(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: customer-srv
                port:
                  number: 3000
